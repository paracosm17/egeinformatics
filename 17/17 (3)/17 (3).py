# В файле содержится последовательность из 10 000 натуральных чисел. Каждое число не превышает 10 000. 
# Определите и запишите в ответе сначала количество пар элементов последовательности, у которых различные 
# остатки от деления на d = 160 и хотя бы одно из чисел делится на p = 7, затем максимальную из сумм элементов 
# таких пар. В данной задаче под парой подразумевается два различных элемента последовательности. 
# Порядок элементов в паре не важен.
# https://inf-ege.sdamgia.ru/problem?id=37337

nums = list(map(int, open("17 (3).txt", "r").read().splitlines()))  # Открываем файл и формируем список из чисел
pairs = []                                                          # Тут будем сохранять пары соответствующие
                                                                    # условию

for i in range(len(nums) - 1):                                      # Двойным циклом проходимся по индексам и ищем пары                                                            
    for j in range(i + 1, len(nums)):
        if nums[i] % 160 != nums[j] % 160 and (nums[i] % 7 == 0 or nums[j] % 7 == 0):
            pairs.append([nums[i], nums[j]])

print(len(pairs), max(list(map(sum, pairs))))                       # Тут всё то же самое, что и в 17 (1)
