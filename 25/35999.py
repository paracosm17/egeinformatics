# Найдите все натуральные числа N, принадлежащие отрезку [200 000 000; 400 000 000], которые можно 
# представить в виде N = 2^m · 3^n, где m — чётное число, n — нечётное число. В ответе запишите все 
# найденные числа в порядке возрастания.
# https://inf-ege.sdamgia.ru/problem?id=35999

twos = [2**i for i in range(0, 29, 2)]          # Генерируем список степеней двойки
threes = [3**j for j in range(1, 20, 2)]        # Генерируем список степеней тройки
result = []                                     # Сюда будем складывать полученные числа

for two in twos:                                # С помощью двойного цикла перемножаем степени двоек и троек
    for three in threes:
        product = two * three
        if 200000000 <= product <= 400000000:   # Если подходит под условие, добавляем в список
            result.append(product)

print(*sorted(result))                          # Сортируем по возрастанию и выводим


# * Почему мы генерируем степени двоек и троек именно так? range(0, 29, 2) это и будут наши степени
# * Шаг 2 нужен для того, чтобы степени были либо четные, либо нечетные. А начинаем соответственно с 1 или 2
# * Ограничиваем степени 29 и 20 потому что больше не имеет смысла, числа будут получаться больше 400000000
