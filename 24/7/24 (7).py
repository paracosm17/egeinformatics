# Текстовый файл содержит строки различной длины. Общий объём файла не превышает 1 Мбайт. 
# Строки содержат только заглавные буквы латинского алфавита (ABC…Z).
# В строках, содержащих менее 25 букв A, нужно определить и вывести максимальное расстояние между 
# одинаковыми буквами в одной строке.
# https://inf-ege.sdamgia.ru/problem?id=35998

f = open("24 (7).txt", "r").read().splitlines()
maxx = 0

for string in f:
    if string.count("A") < 25:
        for i in set(string):
            f_index = string.index(i)
            l_index = len(string) - 1 - string[::-1].index(i)
            difference = l_index - f_index
            maxx = max(maxx, difference)

print(maxx)


# Объяснение:
# Как найти максимальное значение между 2 одинаковыми буквами
# Для начала пройдемся циклом по set(string), функция set вернет массив с уникальными элементами, 
# то есть в нашем случае с уникальными буквами.
# Далее проходимся циклом по каждой букве и находим ее первый индекс f_index = string.index(i)
# И последний индекс l_index = len(string) - 1 - string[::-1].index(i)
# Для нахождения последнего индекса мы переворачиваем строку string[::-1] и находим индекс нашей буквы,
# но так как строка перевернута, индекс будет первый от нуля, поэтому нам нужно от самого последнего индекса
# len(string) - 1 отнять наш полученный индекс. Таким образом мы найдем первый индекс буквы с конца 
# Далее находим разницу между ними и в переменную maxx записываем максимальное и выводим в конце
